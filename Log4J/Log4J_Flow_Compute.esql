DECLARE hello EXTERNAL CHARACTER 'C:\Users\Sreenivas Bandaru\Log4J\Log4jConfigurationFile';
DECLARE var BOOLEAN;

CREATE COMPUTE MODULE Log4J_Flow_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		   CALL initLog4j(hello) INTO var;
		   CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END; 

	CREATE PROCEDURE CopyEntireMessage() BEGIN

		DECLARE input_request,output_response CHARACTER;
		set OutputRoot.JSON.Data=InputRoot.XMLNSC;
		
		SET input_request = CAST(ASBITSTREAM(InputRoot.XMLNSC CCSID InputRoot.Properties.CodedCharSetId) as CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		SET output_response = cast(ASBITSTREAM(OutputRoot.JSON CCSID InputRoot.Properties.CodedCharSetId) as CHARACTER CCSID InputRoot.Properties.CodedCharSetId);
		
		CALL logwrite(MessageFlowLabel,'RakeshLogger1', 'INFO', 'Application_data: ' || input_request) into var;
		CALL logwrite(MessageFlowLabel,'RakeshLogger1', 'INFO', 'Application_data: ' || output_response) into var;

	END;
END MODULE;

CREATE FUNCTION logwrite(in mfname CHARACTER, in logger_name CHARACTER, in level CHARACTER , in data CHARACTER)
RETURNS boolean
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.log";

CREATE FUNCTION initLog4j(in logConfigPath CHARACTER) RETURNS BOOLEAN
LANGUAGE JAVA
EXTERNAL NAME "com.ibm.broker.IAM3.Log4jNode.initLog4j";



